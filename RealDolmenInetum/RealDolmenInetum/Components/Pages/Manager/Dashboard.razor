@page "/"
@using ModelLibrary.Models
@using ModelLibrary.Dto
@using ModelLibrary.ViewModels
@using Newtonsoft.Json
@inject HttpClient Http
@rendermode InteractiveServer
@inject NavigationManager NavigationManager

<PageTitle>Dashboard</PageTitle>

<a href="/toevoegen"><button class="btn btn-success">Toevoegen</button></a>

@if (usersOpBench != null && usersOpBench.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>Naam</th>
                <th>Email</th>
                <th>Bench start</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var userBench in usersOpBench)
            {
                <tr>
                    <td class="userName" @onclick="() => NavigateUserPage(userBench.UserId)"><MudIcon Icon="@Icons.Material.Filled.Person" Title="Favorite" />@userBench.Username</td>
                    <td>@userBench.Mail</td>
                    <td>@userBench.StartBench.ToString("dd-MM-yyyy")</td>
                </tr>
            }
        </tbody>
    </table>
    }
else if (!string.IsNullOrEmpty(ErrorMessage))
{
    <p>@ErrorMessage</p>
}
else
{
    <p>No data available</p>
}

@code {
    public List<UserViewModel> usersOpBench;
    public HttpClient httpClient = new HttpClient();
    public string ErrorMessage = "";

    protected override async Task OnInitializedAsync()
    {
        await FetchData();
    }

    public async Task FetchData()
    {
        try
        {
            var response = await Http.GetAsync("https://localhost:7256/user/bench");
            if (response.IsSuccessStatusCode)
            {
                var content = await response.Content.ReadAsStringAsync();
                usersOpBench = JsonConvert.DeserializeObject<List<UserViewModel>>(content);
            }
            else
            {
                ErrorMessage = "Fout bij het ophalen van gegevens uit de database.";
                usersOpBench = new List<UserViewModel>();
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Er is een onverwachte fout opgetreden: {ex.Message}";
            usersOpBench = new List<UserViewModel>();
        }
    }
    public void NavigateUserPage(int id)
    {
        NavigationManager.NavigateTo("/user/" + id);

    }
}
