@page "/"
@using ModelLibrary.Models
@using ModelLibrary.Dto
@using ModelLibrary.ViewModels
@inject NavigationManager NavigationManager
@using Newtonsoft.Json
@inject HttpClient Http

<PageTitle>Dashboard</PageTitle>


@if (usersOpBench != null) {
    <table class="table">
        <thead>
            <tr>
                <th>Username</th>
                <th>Email</th>
                <th>Start Bench</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var userBench in usersOpBench)
            {
                <tr>
                    <td>@userBench.First_Name</td>
                    <td>@userBench.Last_Name</td>
                    <td>@userBench.Email</td>
                    <td>@userBench.Start_Date.ToString("yyyy-MM-dd")</td>
                </tr>
            }
        </tbody>
    </table>
    }
    
else
{
    <p>No data available</p>
}
<a href="/toevoegen"><button class="btn btn-success">Toevoegen</button></a>

@code {
    public List<UserViewModel> usersOpBench;
    public HttpClient httpClient = new HttpClient();
    string[] headings = { "Naam", "Email"};

    protected override async Task OnInitializedAsync()
    {
        await FetchData();
    }

    public async Task FetchData()
    {
        var response = await httpClient.GetAsync("https://localhost:7256/Users/Bench");
        if (!response.IsSuccessStatusCode)
        {
            //display error message in UI 
            return;
        }
        // 
        var content = await response.Content.ReadAsStringAsync();

        // MAAK GEBRUIK VAN NEWTONSOFT.JSON VOOR DESERIALIZE(ERROR CAN NOT CONVERT)
        List<UserViewModel> fetchUsers = JsonConvert.DeserializeObject<List<UserViewModel>>(content); // TO CHECK IF IT WORKS
        usersOpBench = fetchUsers;
    }

    private void NavigateToProjectFormulier()
    {
        NavigationManager.NavigateTo("/toevoegen");
    }
}
