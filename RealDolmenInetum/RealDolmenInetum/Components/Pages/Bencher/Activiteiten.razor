@page "/activiteit"
@rendermode InteractiveServer
@using ModelLibrary.Models
@using Newtonsoft.Json
@inject HttpClient Http

<PageTitle>Activiteit selectie</PageTitle>

 <div class="alles">
    <div class="links">
        <h1>Welke activiteit ga je starten?</h1>

        <form action="#">
            <label for="activiteiten">Kies een activiteit:</label>
            <select name="activiteiten" id="activiteiten">
                @foreach (var occupation in occupations)
                {
                    <option value="@occupation.Type">@occupation.Type</option>
                }
            </select>


            <button type="submit" value="Opslaan" class="btn btn-success">Opslaan</button>
        </form>
    </div>

    <aside>
        <div class="uitlegInternproject">
            <h2>uitlegInternproject</h2>
            <p>
            uitlegInternproject
            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Velit molestias possimus ipsa aliquid debitis
            ullam aspernatur, veritatis facere? Velit recusandae id nesciunt iure maxime voluptatibus est sint eius
            eligendi accusantium.
        </p>
        </div>
        <div class="Cursus">
            <h2>Cursus</h2>
            <p>
            uitlegInternproject
            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Velit molestias possimus ipsa aliquid debitis
            ullam aspernatur, veritatis facere? Velit recusandae id nesciunt iure maxime voluptatibus est sint eius
            eligendi accusantium.
        </p>
        </div>
        <div class="uitlegTraining voor certificaten">
            <h2>Training voor certificaten</h2>
            <p>
            uitlegInternproject
            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Velit molestias possimus ipsa aliquid debitis
            ullam aspernatur, veritatis facere? Velit recusandae id nesciunt iure maxime voluptatibus est sint eius
            eligendi accusantium.
        </p>
        </div>
        <div class="uitlegExamen certificaat">
            <h2>Examen certificaat</h2>
            <p>
            uitlegInternproject
            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Velit molestias possimus ipsa aliquid debitis
            ullam aspernatur, veritatis facere? Velit recusandae id nesciunt iure maxime voluptatibus est sint eius
            eligendi accusantium.
        </p>
        </div>
        <div class="uitlegZoeken naar opportuniteiten">
            <h2>Zoeken naar opportuniteiten</h2>
            <p>
            uitlegInternproject
            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Velit molestias possimus ipsa aliquid debitis
            ullam aspernatur, veritatis facere? Velit recusandae id nesciunt iure maxime voluptatibus est sint eius
            eligendi accusantium.
        </p>
        </div>
        <div class="uitlegSollicitatiegesprekken">
            <h2>Sollicitatiegesprekken</h2>
            <p>
            uitlegInternproject
            Lorem ipsum dolor sit, amet consectetur adipisicing elit. Velit molestias possimus ipsa aliquid debitis
            ullam aspernatur, veritatis facere? Velit recusandae id nesciunt iure maxime voluptatibus est sint eius
            eligendi accusantium.
        </p>
        </div>
    </aside>
    </div>

@code {
    public List<Occupation> occupations = new List<Occupation>();

    protected override async Task OnInitializedAsync()
    {
        await FetchOccupations();
    }

    public async Task FetchOccupations()
    {
        try
        {
            var response = await Http.GetAsync("https://localhost:7256/occupation"); // Adjust the URL as needed
            if (response.IsSuccessStatusCode)
            {
                var content = await response.Content.ReadAsStringAsync();
                occupations = JsonConvert.DeserializeObject<List<Occupation>>(content);
            }
            else
            {
                // Handle the error, maybe set occupations to an empty list or show an error message
                occupations = new List<Occupation>();
            }
        }
        catch (Exception ex)
        {
            // Log or handle the exception as appropriate
            occupations = new List<Occupation>(); // Ensure the UI has an initialized list to work with, even in error states
        }
    }
}
