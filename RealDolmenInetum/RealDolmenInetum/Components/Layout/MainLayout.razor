@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
@inject AuthService auth
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<div class="page">
    <MudThemeProvider @rendermode="InteractiveServer" />
    <MudDialogProvider @rendermode="InteractiveServer" />
    <MudSnackbarProvider @rendermode="InteractiveServer" />
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <p class="mb-0">@username</p>
            <MudIcon Icon="@Icons.Material.Filled.Person" Color="Color.Default" Title="Person" Size="Size.Large" Class="ms-lg-1" />
            <p>id : @userId</p>
        </div>

        <article class="content px-4">
            @if (auth.GetToken() != null)
            {
                @Body
            }
            else
            {
                // REDIRECT NAAR DE LOGIN PAGINA ALS ER GEEN USER CONNECTED IS.
               <RealDolmenInetum.Components.Pages.Login.RedirectToLogin></RealDolmenInetum.Components.Pages.Login.RedirectToLogin>
            }
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    public string username;
    private string userId;

    protected override async Task OnInitializedAsync()
    {
        if (auth.GetToken() != null)
        {
            username = auth.GetUsername();
            userId = auth.GetIdFromLoggedUser();
        }
        


    }

}
